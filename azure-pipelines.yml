# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      PYTHON_VERSION: '3.6'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

# - task: PythonScript@0
#   displayName: 'Export project path'
#   inputs:
#     scriptSource: 'inline'
#     script: |
#       """Search all subdirectories for `manage.py`."""
#       from glob import iglob
#       from os import path
#       # Python >= 3.5
#       manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
#       if not manage_py:
#           raise SystemExit('Could not find a Django project')
#       project_location = path.dirname(path.abspath(manage_py))
#       print('Found Django project in', project_location)
#       print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- script: |
    python3.6 -m venv antenv3.6
    source antenv3.6/bin/activate
    sudo apt-get install libpq-dev python-dev
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements/default.txt
    python -m pip install django
  displayName: 'Install prerequisites'

# - script: |
#     pushd '$(projectRoot)'
#     python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
#   displayName: 'Run tests'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFiles: "**/TEST-*.xml"
#     testRunTitle: 'Python $(PYTHON_VERSION)'
#   condition: succeededOrFailed()

# Package files
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Pay-As-You-Go Dev/Test(d31a6f5e-a7f4-4e7a-8b66-af18b13dd77f)'
    appType: 'webAppLinux'
    WebAppName: 'omou-api'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    RuntimeStack: 'PYTHON|3.6'
    StartupCommand: 'python3.6 manage.py runserver'
    displayName: "Deploying to Azure"

# Publish
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'